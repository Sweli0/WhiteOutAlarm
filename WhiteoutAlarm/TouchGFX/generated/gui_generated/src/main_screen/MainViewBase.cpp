/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    progressIndicatorValueUpdatedCallback(this, &MainViewBase::progressIndicatorValueUpdatedCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Walpaper.setBitmap(touchgfx::Bitmap(BITMAP_WALPAPERWHITEOUT_ID));
    Walpaper.setPosition(0, 0, 480, 272);
    Walpaper.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    Walpaper.setAlpha(218);
    add(Walpaper);

    Hour.setPosition(361, 10, 100, 25);
    Hour.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Hour.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KMYA));
    Hour.displayLeadingZeroForHourIndicator(true);
    Hour.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    Hour.setTime24Hour(10, 10, 0);
    add(Hour);

    Volume.setXY(351, 144);
    Volume.setProgressIndicatorPosition(0, 0, 110, 110);
    Volume.setRange(0, 100);
    Volume.setCenter(55, 55);
    Volume.setRadius(50);
    Volume.setLineWidth(10);
    Volume.setStartEndAngle(0, 360);
    Volume.setCapPrecision(180);
    Volume.setBackground(touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_CIRCLEPROGRESS_BACKGROUNDS_SMALL_ID));
    VolumePainter.setColor(touchgfx::Color::getColorFromRGB(67, 90, 120));
    Volume.setPainter(VolumePainter);
    Volume.setValue(60);
    Volume.setValueSetAction(progressIndicatorValueUpdatedCallback);
    add(Volume);
}

MainViewBase::~MainViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MainViewBase::setupScreen()
{

}

void MainViewBase::progressIndicatorValueUpdatedCallbackHandler(const touchgfx::AbstractProgressIndicator& src)
{
    if (&src == &Volume)
    {
        //VolumeChange
        //When Volume progress indicator value updated update value Volume
        //Update value Volume over 0ms time
        Volume.updateValue(2, 0);
    }
}
